#!/bin/bash

# CRM Database Restore Script
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/restore.sh <backup_file> [database_name]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ $# -lt 1 ]]; then
    log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <backup_file> [database_name]"
    log_info "–ü—Ä–∏–º–µ—Ä: $0 ./backups/dir_crm_prod_backup_20241201_120000.sql.gz"
    exit 1
fi

BACKUP_FILE=$1
DB_NAME=${2:-dir_crm_prod}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞
if [[ ! -f "$BACKUP_FILE" ]]; then
    log_error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_FILE"
    exit 1
fi

log_warning "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!"
log_warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
log_warning "–§–∞–π–ª –±—ç–∫–∞–ø–∞: $BACKUP_FILE"
echo
read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " -r
if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
    log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å PostgreSQL
if ! docker-compose -f docker-compose.prod.yml ps postgres | grep -q "Up"; then
    log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose -f docker-compose.prod.yml up -d postgres"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î
log_info "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend —Å–µ—Ä–≤–∏—Å–∞..."
docker-compose -f docker-compose.prod.yml stop backend || true

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–π –ë–î –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
log_info "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–π –ë–î –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º..."
CURRENT_BACKUP="./backups/${DB_NAME}_before_restore_$(date +%Y%m%d_%H%M%S).sql"
docker-compose -f docker-compose.prod.yml exec -T postgres pg_dump -U crm_user "$DB_NAME" > "$CURRENT_BACKUP" || true
gzip "$CURRENT_BACKUP" || true
log_success "–¢–µ–∫—É—â–∞—è –ë–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: ${CURRENT_BACKUP}.gz"

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î
log_info "üîå –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î..."
docker-compose -f docker-compose.prod.yml exec -T postgres psql -U crm_user -d postgres -c "
SELECT pg_terminate_backend(pid) 
FROM pg_stat_activity 
WHERE datname = '$DB_NAME' AND pid <> pg_backend_pid();"

# –£–¥–∞–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_info "üóëÔ∏è –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.prod.yml exec -T postgres psql -U crm_user -d postgres -c "DROP DATABASE IF EXISTS $DB_NAME;"
docker-compose -f docker-compose.prod.yml exec -T postgres psql -U crm_user -d postgres -c "CREATE DATABASE $DB_NAME;"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
log_info "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞..."

if [[ "$BACKUP_FILE" == *.gz ]]; then
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–∂–∞—Ç
    gunzip -c "$BACKUP_FILE" | docker-compose -f docker-compose.prod.yml exec -T postgres psql -U crm_user -d "$DB_NAME"
else
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å–∂–∞—Ç
    docker-compose -f docker-compose.prod.yml exec -T postgres psql -U crm_user -d "$DB_NAME" < "$BACKUP_FILE"
fi

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Prisma –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã
log_info "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Prisma..."
docker-compose -f docker-compose.prod.yml run --rm backend npx prisma migrate deploy

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–∞
log_info "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–∞..."
docker-compose -f docker-compose.prod.yml up -d backend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
log_info "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞..."
sleep 10

if curl -f -s http://localhost:3002/api/health > /dev/null; then
    log_success "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    log_success "Backend —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log_error "‚ùå Backend —Å–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs backend"
    exit 1
fi

log_info "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏:"
log_info "  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
log_info "  - –§–∞–π–ª –±—ç–∫–∞–ø–∞: $BACKUP_FILE"
log_info "  - –ë—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –ë–î: ${CURRENT_BACKUP}.gz"
log_info "  - –í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: $(date)"
